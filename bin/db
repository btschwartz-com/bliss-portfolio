#!/bin/bash
# db


# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail


# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}


if [ $# -ne 1 ]; then
  usage
  exit 1
fi


# Parse argument.  $1 is the first argument
case $1 in
  "create")
    if test -e "var/db.sqlite3"; then
    echo "Error: database already exists"
    exit 1
    fi
    mkdir -p var/uploads
    sqlite3 var/db.sqlite3 < sql/schema.sql
    sqlite3 var/db.sqlite3 < sql/data.sql
    cp public/uploads/* var/uploads/
    ;;


  "destroy")
    rm -rf var/db.sqlite3 var/uploads
    ;;


  "reset")
    bash bin/db destroy
    bash bin/db create
    ;;


  "dump")
    TABLES=$(sqlite3 var/db.sqlite3 ".tables")
    for TABLE in $TABLES; do
        echo "----------------------------------------"
        echo "           *** $TABLE ***"
        echo ""
        sqlite3 -batch -line var/db.sqlite3 "SELECT * FROM $TABLE;" | sed '/^$/ s/^/+ /'
        echo ""
    done
    echo "----------------------------------------"


    ;;
  *)
    usage
    exit 1
    ;;
esac


